:root {
  --layout-wrapper-width: 60rem;
  --layout-wrapper-spacing: 2rem;
  --layout-stack-gap: 1rem;
  --layout-stack-separator-color: grey;
  --layout-cluster-gap: 1rem;
  --layout-grid-gap: 2rem;
  --layout-grid-width: 20rem;
}

/* Wrapper */
.layout-wrapper {
  margin: 0 auto;
  padding: 0 var(--layout-wrapper-spacing);

  max-width: calc(
    var(--layout-wrapper-width) + var(--layout-wrapper-spacing) * 2
  );
}

/* Center */
.layout-center {
  width: auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.layout-center--horizontal {
  align-items: center;
}

.layout-center--vertical {
  height: 100%;
  justify-content: center;
}

/* Vertical Stack */
.layout-stack {
  --stack-gap-size: var(--layout-stack-gap);
  display: flex;
  flex-direction: column;
}

.layout-stack-item:not(:last-child) {
  margin-bottom: var(--stack-gap-size);
}

.layout-stack--no-gap {
  --stack-gap-size: 0rem;
}

.layout-stack--xsmall {
  --stack-gap-size: calc(var(--layout-stack-gap) * 0.25);
}

.layout-stack--small {
  --stack-gap-size: calc(var(--layout-stack-gap) * 0.5);
}

.layout-stack--large {
  --stack-gap-size: calc(var(--layout-stack-gap) * 2);
}

.layout-stack--xlarge {
  --stack-gap-size: calc(var(--layout-stack-gap) * 3);
}

.layout-stack--with-separator > .layout-stack-item:not(:last-child) {
  padding-bottom: var(--stack-gap-size);
  border-bottom: 1px solid var(--layout-stack-separator-color);
}

/* Cluster */
.layout-cluster-wrapper {
  /* â†“ Suppress horizontal scrolling caused by the negative margin in some circumstances */
  overflow: hidden;
}

/* Without this, the overflow: hidden; would not work, sometimes showing unexpected scrollbars... */
.layout-cluster {
  --cluster-gap-size: var(--layout-cluster-gap);
  --cluster-horizontal-gap: calc(var(--cluster-gap-size) / 2);
  --cluster-vertical-gap: calc(
    var(--cluster-vertical-gap-size, var(--cluster-gap-size)) / 2
  );

  display: flex;
  flex-wrap: wrap;
  align-items: center;
  margin: calc(var(--cluster-vertical-gap) * -1)
    calc(var(--cluster-horizontal-gap) * -1);
}

.layout-cluster--no-wrap {
  flex-wrap: nowrap;
}

.layout-cluster-item {
  margin: var(--cluster-vertical-gap) var(--cluster-horizontal-gap);
}

.layout-cluster--right {
  justify-content: flex-end;
}

.layout-cluster--spaced {
  justify-content: space-between;
}

.layout-cluster--top {
  align-items: flex-start;
}

.layout-cluster--bottom {
  align-items: flex-end;
}

.layout-cluster--stretch {
  align-items: stretch;
}

.layout-cluster--no-gap {
  --cluster-gap-size: 0rem;
}

.layout-cluster--xsmall {
  --cluster-gap-size: calc(var(--layout-cluster-gap) * 0.25);
}

.layout-cluster--small {
  --cluster-gap-size: calc(var(--layout-cluster-gap) * 0.5);
}

.layout-cluster--large {
  --cluster-gap-size: calc(var(--layout-cluster-gap) * 2);
}

.layout-cluster--xlarge {
  --cluster-gap-size: calc(var(--layout-cluster-gap) * 4);
}

.layout-cluster--vertical-no-gap {
  --cluster-vertical-gap-size: 0rem;
}

.layout-cluster--vertical-xsmall {
  --cluster-vertical-gap-size: calc(var(--layout-cluster-gap) * 0.25);
}

.layout-cluster--vertical-small {
  --cluster-vertical-gap-size: calc(var(--layout-cluster-gap) * 0.5);
}

.layout-cluster--vertical-medium {
  --cluster-vertical-gap-size: var(--layout-cluster-gap);
}

.layout-cluster--vertical-large {
  --cluster-vertical-gap-size: calc(var(--layout-cluster-gap) * 2);
}

.layout-cluster--vertical-xlarge {
  --cluster-vertical-gap-size: calc(var(--layout-cluster-gap) * 4);
}

.layout-cluster-item--grow {
  flex-grow: 1;
}

/* "Floating" is achieved via margin: auto */
.layout-cluster-item--left {
  margin-right: auto;
}

.layout-cluster-item--right {
  margin-left: auto;
}

@media all and (max-width: 420px) {
  .layout-cluster--full-width-on-mobile {
    margin-left: 0;
    margin-right: 0;
    flex-wrap: wrap;
  }

  .layout-cluster--full-width-on-mobile > .layout-cluster-item {
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

/* Grid */
.layout-grid {
  display: grid;
  --grid-gap-size: var(--layout-grid-gap);
  --grid-size: var(--layout-grid-width);

  grid-gap: var(--grid-gap-size);
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-size), 1fr));
}

.layout-grid--no-grow {
  grid-template-columns: repeat(auto-fill, var(--grid-size));
}

.layout-grid-item {
  min-width: 0;
}

.layout-grid-item--full-width {
  grid-column: 1 / -1;
}
