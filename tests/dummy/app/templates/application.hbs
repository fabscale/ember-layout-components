<Layout::VerticalStack @size="large" as |Section|>
  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h1 id="title">ember-layout-components</h1>
      </SectionItem>

      <SectionItem>
        <p>
          This addon provides easy to use and flexible layout components.
          By using these components, your layout will automatically be flexible and consistent.
          Instead of defining exactly how something should look like at a given viewport, let the intrinsic size of
          content and CSS calcualte the best possible layout, based on the basic rules these layout components define.
          This addon is heavily inspired by <a href="https://every-layout.dev/">every-layout.dev</a>.
        </p>
      </SectionItem>

      <SectionItem>
        <h2>
          Support / Compatibility
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          All layout components use CSS Properties. If you need to support IE11, you could use something like
          <a href="https://github.com/MadLittleMods/postcss-css-variables">postcss-css-variables</a> to get a gracious
          fallback.
        </p>
      </SectionItem>

      <SectionItem>
        <h2>
          Usage hints & tips
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          It can take a bit to get used to this layouting approach, but it really pays off once you get it. Ideally, you
          should avoid breaking out of these rules wherever possible.
          If you find yourself constantly overwriting the layouts, chances are your design is not consistent enough.
          Feel free to nest the layout components as deeply as needed - they are all template-only components and should be reasonably performant.
        </p>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>

  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h2>
          Center
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          Horizontally center content at it's intrinsic size.
        </p>
      </SectionItem>

      <SectionItem>
        <CodeBlock @code={{this.centerCode}} @language="handlebars"/>
      </SectionItem>

      <SectionItem>
        <Layout::Center>
          <DemoItem/>
        </Layout::Center>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>

  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h2>
          Wrapper
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          A wrapper that will reach the maximum wrapper size (or smaller), keeping horizontal spacing at any time.
          Can be customized with
          <CodeInline>--layout-wrapper-width</CodeInline>
          (default:
          <CodeInline>60rem</CodeInline>
          ) and
          <CodeInline>--layout-wrapper-spacing</CodeInline>
          (default:
          <CodeInline>2rem</CodeInline>
          ).
        </p>
      </SectionItem>

      <SectionItem>
        <CodeBlock @code={{this.wrapperCode}} @language="handlebars"/>
      </SectionItem>

      <SectionItem>
        <Layout::Wrapper>
          <DemoItem/>
        </Layout::Wrapper>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>

  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h2>
          Vertical Stack
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          Place items one below each other, with equal spacing between them.
          Can be customized with
          <CodeInline>--layout-vertical-stack-gap</CodeInline>
          (default:
          <CodeInline>1rem</CodeInline>
          ).
          The size options are quarter/half/double of the gap size.
        </p>
      </SectionItem>

      <SectionItem>
        <CodeBlock @code={{this.verticalStackCode}} @language="handlebars"/>
      </SectionItem>

      <SectionItem>
        <Layout::Cluster @fullWidthOnMobile={{true}} as |Item|>
          <Item>
            <ConfigOption
              @label="@size"
              @value={{this.verticalStackSize}}
              @onChange={{fn this.updateProperty 'verticalStackSize'}}
              @options={{array "xsmall" "small" "large"}}
            />
          </Item>
        </Layout::Cluster>
      </SectionItem>

      <SectionItem>
        <Layout::VerticalStack
          @size={{this.verticalStackSize}}
          as |Item|
        >
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
        </Layout::VerticalStack>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>

  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h2>
          Cluster
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          Lay out items horizontally, but breaking the line if necessary. Each item uses its intrinsic size.
          There is equal spacing horizontally and vertically between them.
          Can be customized with
          <CodeInline>--layout-cluster-gap</CodeInline>
          (default:
          <CodeInline>1rem</CodeInline>
          ).
          The size options are quarter/half/double the gap size.
          The position can be used to align stuff to the right, or space it evenly.
          The
          <CodeInline>fullWidthOnMobile</CodeInline>
          option will ensure all items get the full width under 420px.
        </p>
      </SectionItem>

      <SectionItem>
        <CodeBlock @code={{this.clusterCode}} @language="handlebars"/>
      </SectionItem>

      <SectionItem>
        <Layout::Cluster @fullWidthOnMobile={{true}} as |Item|>
          <Item>
            <ConfigOption
              @label="@size"
              @value={{this.clusterSize}}
              @onChange={{fn this.updateProperty 'clusterSize'}}
              @options={{array "xsmall" "small" "large"}}
            />
          </Item>

          <Item>
            <ConfigOption
              @label="@position"
              @value={{this.clusterPosition}}
              @onChange={{fn this.updateProperty 'clusterPosition'}}
              @options={{array "right" "spaced"}}
            />
          </Item>

          <Item>
            <ConfigOption
              @label="@fullWidthOnMobile"
              @value={{this.clusterFullWidthOnMobile}}
              @onChange={{fn this.updateProperty 'clusterFullWidthOnMobile'}}
              @options={{array true}}
            />
          </Item>
        </Layout::Cluster>
      </SectionItem>

      <SectionItem>
        <Layout::Cluster
          @size={{this.clusterSize}}
          @position={{this.clusterPosition}}
          @fullWidthOnMobile={{this.clusterFullWidthOnMobile}}
          as |Item|
        >
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
        </Layout::Cluster>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>

  <Section>
    <Layout::VerticalStack as |SectionItem|>
      <SectionItem>
        <h2>
          Grid
        </h2>
      </SectionItem>

      <SectionItem>
        <p>
          Lay out items with equal size. Grid item width is calculated based on available width and a given min-width.
          Can be customized with
          <CodeInline>--layout-grid-gap</CodeInline>
          (default:
          <CodeInline>2rem</CodeInline>
          ) and
          <CodeInline>--layout-grid-width</CodeInline>
          (default:
          <CodeInline>20rem</CodeInline>
          ).
          Note: When using larger widths, make sure to add a media query to drop to
          <CodeInline>grid-template-columns: 1fr</CodeInline>
          below that size.
        </p>
      </SectionItem>

      <SectionItem>
        <CodeBlock @code={{this.gridCode}} @language="handlebars"/>
      </SectionItem>

      <SectionItem>
        <Layout::Grid as |Item|>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
          <Item>
            <DemoItem/>
          </Item>
        </Layout::Grid>
      </SectionItem>
    </Layout::VerticalStack>
  </Section>
</Layout::VerticalStack>
